{"version":3,"sources":["components/Navbar/index.tsx","components/Results/Card/index.tsx","components/Results/List/index.tsx","components/SearchBar/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","className","ResultCard","props","name","ResultList","locations","map","item","i","SearchBar","useState","searchText","setSearchText","result","setResult","getLocations","e","a","length","axios","get","res","data","console","log","error","placeholder","onChange","target","value","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAceA,EAXA,WAEX,OACI,qBAAKC,UAAU,yCAAf,SACI,oBAAIA,UAAU,wCAAd,sB,gDCSGC,EAVI,SAACC,GAEhB,OACI,qBAAKF,UAAU,0CAAf,SACI,6BAAKE,EAAMC,UCaRC,EAjBI,SAACF,GAEhB,IAAMG,EAAsBH,EAAMG,UAElC,OACI,qBAAKL,UAAU,gEAAf,SACKK,EAAUC,KAAI,SAACC,EAAcC,GAC1B,OACK,cAAC,EAAD,CAAYL,KAAMI,UC0CxBE,EApDG,WAAO,IAAD,EAEgBC,mBAAiB,IAFjC,mBAEbC,EAFa,KAEDC,EAFC,OAGQF,mBAAmB,CAAC,KAH5B,mBAGbG,EAHa,KAGLC,EAHK,KAKdC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACjBL,EAAcI,KAEVL,EAAWO,OAAS,GAHP,0CAKSC,IAAMC,IAAI,gBAAkBT,GALrC,OAMQ,oDADXU,EALG,QAMDC,MACJC,QAAQC,IAAIH,EAAIC,MAEpBC,QAAQC,IAAI,OAAQH,GACpBP,EAAUO,EAAIC,MAVL,kDAYTC,QAAQE,MAAR,8FAZS,0DAAH,sDAkBlB,OACI,gCACI,sBAAKzB,UAAU,yFAAf,UACI,uBAAO0B,YAAY,YAAYC,SAAU,SAAAX,GAAC,OAAID,EAAaC,EAAEY,OAAOC,QAChE7B,UAAU,mCACd,qBAAK8B,MAAM,6BAA6B9B,UAAU,UAAU+B,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAnG,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,EAAE,qDAK7E,qBAAKrC,UAAU,WAAf,SACKW,EAAWO,OAAS,EACjB,cAAC,EAAD,CAAYb,UAAWQ,IAEvB,qBAAKb,UAAU,mBAAf,SACI,+ECxBTsC,EAdH,WAEV,OACE,sBAAKtC,UAAU,GAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,oBAAf,SACE,cAAC,EAAD,UCGOuC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7ebe7b7f.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Navbar = ( ) => {\n\n    return (\n        <nav className=\"flex flex-row justify-center px-3 py-3\" >\n            <h1 className=\"font-extrabold text-4xl text-gray-800\" >Geogg</h1>\n\n\n        </nav>\n    )\n}\n\nexport default Navbar","// import React from 'react'\n\ninterface Props {\n    name: String\n}\n\nconst ResultCard = (props: Props) => {\n\n    return (\n        <div className=\"bg-white border-b px-3 py-2  text-black\" >\n            <h1>{props.name}</h1>\n        </div>\n    )\n\n}\n\nexport default ResultCard","// import React from 'react'\nimport ResultCard from '../Card'\n\ninterface Props {\n    locations: [string]\n}\nconst ResultList = (props: Props) => {\n\n    const locations: [string] = props.locations\n\n    return (\n        <div className=\"bg-white border border-gray-50 shadow-md rounded-md space-y-2\">\n            {locations.map((item: string, i: number) => {\n                return (\n                     <ResultCard name={item} />\n                )\n               \n            })}\n\n        </div>\n    )\n}\n\nexport default ResultList","import axios from 'axios'\nimport { useState } from 'react'\nimport ResultList from '../Results/List'\n\nconst SearchBar = () => {\n\n    const [searchText, setSearchText] = useState<string>('')\n    const [result, setResult] = useState<[string]>([''])\n\n    const getLocations = async (e: string) => {\n        setSearchText(e)\n        // input length validation handled server side\n        if (searchText.length > 2) {\n            try {\n                const res = await axios.get('/locations?q=' + searchText)\n                if (res.data === \"not searching, enter more characters to search\") {\n                    console.log(res.data)\n                }\n                console.log('res,', res)\n                setResult(res.data)\n            } catch (error) {\n                console.error(`There was an error getting the data from the server - please try again soon\\n${error}`)\n            }\n\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"flex flex-row justify-between bg-gray-100 rounded-md px-3 py-3 w-full md:w-3/4 mx-auto\" >\n                <input placeholder=\"Search...\" onChange={e => getLocations(e.target.value)}\n                    className=\"border-none bg-gray-100 w-full\" />\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                </svg>\n\n            </div>\n            {/* <h1>Results {result}</h1> */}\n            <div className=\"bg-white\" >\n                {searchText.length > 2 ?\n                    <ResultList locations={result} />\n                    :\n                    <div className=\"text-center py-3\" >\n                        <h1>Start typing to search for a location</h1>\n                    </div>\n\n                }\n            </div>\n\n\n        </div>\n\n\n    )\n}\n\nexport default SearchBar","// import React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport SearchBar from './components/SearchBar';\n// import axios from 'axios'\n\nconst App = () => {\n\n  return (\n    <div className=\"\">\n      <Navbar />\n      <div className=\"w-full px-3 py-10\" >\n        <SearchBar />\n      </div>\n    \n     \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}